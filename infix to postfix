#include<stdio.h>
#include<stdlib.h>
#include<string.h>
void push(char ele);
char pop();
char convert();
int precedence(char symbol);
char stack[20];
char postfix[20];
char infix[20];
int top;
int pos=0;
char symbol;
char d;

void push(char ele)
{
    if(top==19)
    {
        printf("Stack overflow\n");
        exit(0);
    }
    else
    {
        stack[++top]=ele;
    }
}
char pop()
{
    if(top==-1)
    {
         printf("Stack Underflow\n");
    }
    else
    {
        return stack[top--];
    }
}
int precedence(char symbol)
{
    switch(symbol)
    {
        case'^': return 4;
        break;
        case'*':
        case'/':
        case'%': return 3;
        break;
        case'+':
        case'-':return 2;
        break;
        case'(':return 1;
        break;
     }
}
char convert()
{
    for(int i=0;infix[i]!='\0';i++)
    {
        symbol=infix[i];
        switch(symbol)
        {
            case '(':
                push(symbol);
                break;
            case')':
                while((d=pop())!='(')
                {
                    postfix[pos++]=d;
                }
                break;
            case'+':
            case'-':
            case'*':
            case'/':
            case'^':
            case'%':
                if((precedence(stack[top]))>=(precedence(symbol)))
                {
                    postfix[pos++]=pop();
                }
                push(symbol);
                break;
            default:
                postfix[pos++]=symbol;
        }
    }
    while(top!=-1)
    {
        postfix[pos++]=pop();
    }



}

void main()
{
    top=-1;
    int i;
    printf("Enter the infix expression\n");
    gets(infix);
    convert();
    printf("The postfix solution is\n");
    puts(postfix);
}
